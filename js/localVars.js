const localVars = [
    {
        relay: "https://mechanized-aesthetics.net/php-relays/EmailRelay.php",
        blog: [
            {
                "title": "Client side \"Theme Swapping\" using JavaScript",
                "link": "https:\/\/web-presence-news.blogspot.com\/2024\/01\/client-side-theme-swapping-using.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/uj-vh6Q2d0o' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>Give your client options without burning time guessing what they want their site to look like. Utilize the 'Bootswatch Themes' to your advantage by presenting the list they offer and updating your site immediately from a selection menu.</p><p>Special thanks to: <a href='https://bootswatch.com/' target='_blank'>Bootswatch</a></p></div></div>",
                "pubDate": "Thu, 18 Jan 2024 22:50:00",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7221955236935106475"
            }, {
                "title": "Use ChatGPT to upgrade your SEO (Search Engine Optimization)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2024\/01\/use-chatgpt-to-upgrade-your-seo-search.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/00rpDyul9tU' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>Generate more traffic by asking ChatGPT what are the most effective search keywords and phrases for your online products.</p><ul><li>00:26 - Google Analytics Report shows low traffic currently</li><li>01:49 - Log into ChatGPT and describe your web content in great detail</li><li>02:51 - Update meta data and HTML attributes</li><li>04:42 - Log into GitHub add poker keywords</li><li>05:16 - Log into YouTube add your search tags</li><li>06:03 - Upgraded SEO on Black Jack</li><li>06:46 - Upgraded SEO on Trivia Game</li><li>07:00 - Upgraded SEO on BINGO</li><li>07:15 - Upgraded SEO on 5 card draw</li></ul></div></div>",
                "pubDate": "Mon, 08 Jan 2024 15:12:00",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8289366217657033200"
            }, {
                "title": "How to utilize Government Open API endpoints for your web application",
                "link": "https:\/\/web-presence-news.blogspot.com\/2024\/01\/how-to-utilize-government-open-api.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/-IRTFlgggMw' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>How to run a web application using open/public API endpoints instead of your own database.</p><ul><li>Run multiple API calls using a for loop</li><li>Understand what determines an open API</li><li>How to filter out duplicate information</li><li>Filter by location</li><li>Utilizing React.js with axios</li></ul></div></div>",
                "pubDate": "Tue, 02 Jan 2024 15:32:00",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6386902818769320878"
            }, {
                "title": "Using React.js and axios to build a nutrition API with Edamam",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/12\/using-reactjs-and-axios-to-build.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/P0n72be3HLA' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>In this video I use axios to set up an API for food nutrition from <a href='https://developer.edamam.com/' target='_blank'>https://developer.edamam.com</a></p><ul><li>00:42 - edamam.com developer documentation</li><li>02:16 - Save user info & build out data path to each value</li><li>05:06 - JavaScript parseFloat()</li><li>05:53 - Update missing input field</li><li>07:09 - Verify API status & update MySQL database</li></ul><p>Edamam public path to nutrition data:</p><p>https://api.edamam.com/api/nutrition-data?app_id=' + app_id + '&app_key=' + app_key + '&nutrition-type=logging&ingr=' + foodName + '&'</p></div></div>",
                "pubDate": "Tue, 19 Dec 2023 22:23:00",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-9055166761680699207"
            }, {
                "title": "Nearby Locations - JavaScript, React.js and Google Maps",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/12\/nearby-locations-javascript-reactjs-and.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/VRtSu5-nXB8' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>I have found a project where I use the longitude and latitude of a location to find and mark other parks and cities nearby.</p></div></div>",
                "pubDate": "Wed, 13 Dec 2023 17:29:00",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-9153597842566411758"
            }, {
                "title": "Coding projects using open source city datasets",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/11\/coding-projects-using-open-source-city.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/3QN8n5TkfgM' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>Take advantage of your cities free public data. Here are some examples of how to utilize the open source data your town offers. From Bus stops, parks and libraries to police, fire and permit submissions. All the data is available for you.</p><p>Special Thanks to:</p><ul><li><a href='https://www.phoenixopendata.com/dataset' target='_blank'>City of Phoenix, AZ - Public Datasets</a></li><li><a href='https://data-cos-gis.hub.arcgis.com/explore' target='_blank'>City of Scottsdale, AZ - Public Datasets</a></li><li><a href='https://www.valleymetro.org/' target='_blank'>Valley Metro</a></li><li><a href='https://developers.google.com/maps' target='_blank'>Google Developer - Maps</a></li><li><a href='https://github.com/googlemaps/' target='_blank'>Google Maps GitHub</a></li></ul></div></div>",
                "pubDate": "Tue, 14 Nov 2023 20:39:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-515240839750614374"
            }, {
                "title": "Final walk through - React.js Tutorial 9 - From cart to e-commerce web app",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/10\/final-walk-through-reactjs-tutorial-9.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/RPkT6phmBaY' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>Here we tie up a few UI issues, sort our data using SQL and add a cancel feature the 'order item' module. Then, we simply walk through our application one final time.</p><p><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-9' target='_blank'>GitHub: https://github.com/aaronrs2002/cart-ecomm-tutorial-9</a></p><p>Web-Presence LLC</p></div><div class='col-md-6'><label>Lesson outline:</label><ul><li>02:45 - Clear order field upon order success</li> <li>03:25 - Mobile walk through 1</li> <li>05:11 - Adding 'card' class to order log</li> <li>07:04 - SQL ORDER BY - Sorting on the server side <br/> HELPFUL TIP - For inventory consider using 'DESC' so your last order comes up at the top. For example:<br/><samp>`SELECT * FROM inventory WHERE itemName = '${req.params.itemName}' ORDER BY userTimestamp DESC`</samp></li> <li>08:53 - Order cancellations - is a simple update to an existing function</li><li>09:17 - Ternary operator for each case ('received','ordering','cancelled')</li> <li>15:29 - Final walk through</li> <li>18:31 - Responsive/Mobile walk through</li> </ul></div></div>",
                "pubDate": "Tue, 17 Oct 2023 00:32:43 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8833648543735843839"
            },
            {
                "title": "Order and Review component - React.js Tutorial 8 - From cart to e-commerce web app",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/10\/order-and-review-component-reactjs.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/rktEy5I8tjM' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>In this lesson we write the Order and Review functional component. Upgrade our ordering interface, write a search function and much more.</p><p><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-8' target='_blank'>GitHub: https://github.com/aaronrs2002/cart-ecomm-tutorial-8</a></p><p>Web-Presence LLC</p></div><div class='col-md-6'><label>Lesson outline:</label><ul><li>02:36 - Moving 'axios' GET out of useEffect() and into a function</li><li>05:17 - Order log map through each order</li><li>08:58 - Ternary operator 'ordered' vs 'received'</li><li>13:36 - Javascript time - amount of days past</li><li>20:39 - Orders and purchases - share moth list</li><li>25:19 - Javascript Search specific item purchases</li><li>28:48 - Inventory API</li><li>33:20 - UI/UX ease of use</li> <li>36:42 - Stock quantity will calculate live</li> <li>38:30 - Total sold per month</li><li>43:22 - Search function for purchase history</li><li>48-34 - Build client side 'GET' reviews API</li><li>51:09 - Declare 'data-name' attributes to assign rating</li><li>54:00 - JavaScript 'For Each'</li><li>57:10 - Applying stars to your rating</li><li>1:03:56 - Timeline date need to be in order</li><li>1:06:37 - JavaScript reverse() & sort()</li><li>01:07:08 - Write zero placeholders for each monthly sum</li><li>01:07:32 - Wrap up walk through</li><li>01:09:32 - Responsive mobile ready</li></ul></div></div>",
                "pubDate": "Thu, 12 Oct 2023 13:41:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-3542324025052814021"
            }, {
                "title": "Ordering VS Purchasing Apex Chart with React.js Tutorial 7 - From cart to e-commerce web app",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/09\/ordering-vs-purchasing-apex-chart-with.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/sB0wfWF7ygg' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>In this lesson we write multiple APIs to build and inventory module with a line cart comparing ordered units against sold units.</p><p>GitHub:<br /><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-7/' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial-7/</a></p><p>Web-Presence LLC</p></div><div class='col-md-6'><label>Lesson outline:</label><ul><li>00:58 - MySQL create table named 'inventory'</li> <li>01:51 - API Routes to 'inventory' server side code</li> <li>02:16 - 'inventory.js' server side node and express</li> <li>04:08 - 'Inventory.js' React functional component</li><li>05:02 - Important inventory component into CMS component</li> <li>08:10 - 'updateStatus'</li> <li>17:12 - Axios POST to inventory table</li> <li>19:17 - Client side axios POST, PUT - Server side express router PUT</li> <li>21:26 - Axios GET 'inventory'</li> <li>25:33 - Update server side POST</li> <li>30:37 - React useState() - setActiveItem</li> <li>34:07 - React useState() - Set Order - Quantity</li> <li>35:02 - Grab Orders - Client side GET to 'inventory'</li> <li>37:37 - Axios PUT - API update 'items' table</li> <li>38:53 - Server side update 'items' table</li> <li>39:44 - Variable 'tempQuntity' - widen scope</li> <li>48:46 - Order more items CSS color change warning</li> <li>55:24 - Apex line charts 'Ordered' VS 'Sold' comparison</li> <li>59:33 - Build monthly total using for loop</li> <li>01:01:45 - Pass props values to React 'Class Component'</li> <li>01:10:03 - Passing data Apex Charts</li> <li>01:10:33 - MySQL table - Express GET request</li> <li>01:12:50 - React useState for 'purchase data'</li> <li>01:16:04 - Passing data to Apex Chart</li> <li>01:19:10 - Remove stock quantity from old API packages</li> <li>01:21:03 - Calculate current stock</li> <li>01:23:18 - Change apex chart properties - Negative numbers on the Y-axis required (customer order fulfillments)</li> </ul></div></div>",
                "pubDate": "Wed, 27 Sep 2023 14:16:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-1029857753634349343"
            }, {
                "title": "React.js Tutorial 6 - From cart to e-commerce web app: Half star rating, remove review & validation",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/09\/reactjs-tutorial-6-from-cart-to-e.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/4yq8O-poXcQ' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>Writing showing a half star rating, removing a review and shipping form validation.</p><label>Lesson outline:</label><ul><li>01:25 - Representing a half star average</li>  <li>06:29 - Front end validation for shipping form</li>  <li>09:24 - Verify form validation</li>  <li>09:48 - Application run through</li>  <li>11:32 - Remove your product review</li>  <li>15:02 - API path test</li>  <li>16:42 - API callback 'affectedRows'</li> <li>18:21 - Wring a function everyone can access</li></ul><p>GitHub:<br/><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-6/' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial-6/</a></p><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Mon, 18 Sep 2023 18:59:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8251599056141620045"
            }, {
                "title": "React.js Tutorial 5 - From cart to e-commerce web app: Build a rating and review module & API",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/08\/reactjs-tutorial-5-from-cart-to-e-com.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/Z54ZEkYYgC0' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>In this lesson we build a purchase verified rating and review api and module.</p><p>GitHub:<br/><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-5/' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial-5/</a></p></div><div class='col-md-6'><label>Lesson outline:</label><ul><li>00:14 - Update database for reviews data</li>  <li>02:17 - Write server side node.js for reviews data</li>  <li>08:24 - Utilize my old MongoDB e-comm web app</li>  <li>09:06 - Leave a review API module</li>  <li>11:50 - Add send review function & comment form</li>  <li>12:08 - Remove JavaScript & HTML we do not use</li>  <li>13:15 - Write a global timestamp function</li>  <li>14:58 - Refactor old code for review module</li>  <li>17:18 - Update items table when review is submitted</li>  <li>18:31 - React useEffect() for comment module</li>  <li>22:46 - Star rating component</li>  <li>24:56 - Refactor star component with mapping</li>  <li>30:30 - Write client side, update rating info on items table</li>  <li>35:41 - Display overall review average</li>  <li>37:54 - Reset MySQL default data</li>  <li>43:15 - Determine if user has verified purchase</li>  <li>44:53 - Write product comments</li>  <li>51:29 - Clear all DB reviews</li>  <li>52:20 - Server side request purchase info from specific users</li>  <li>55:30 - Set UI for verified purchase</li>  <li>59:02 - Fine tuning - spacing and padding</li>  <li>01:00:36 - Pass grab item function to child modules </li>  <li>01:02:57 - Auto populate previous comment and rating</li>  <li>01:05:20 - Allow only one review by hiding button</li>  <li>01:07:45 - Protect SQL database from illegal characters</li>  <li>01:08:31 - Move user purchases request to parent App.js</li>  </ul><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Thu, 07 Sep 2023 13:56:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5981856961682260280"
            }, {
                "title": "React.js Tutorial 4: From Cart to E-Commerce Web App",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/08\/reactjs-tutorial-4-from-cart-to-e.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/PlXxvZAszNs' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>In this lesson we include search words and category in the search scope and build out or shipping form while revamping our cart.</p><p>GitHub:<br/><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-4' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial-4</a></p><p>Web-Presence LLC</p></div><div class='col-md-6'><label>Lesson outline:</label><ul><li>00:27 - Search filter migration</li> <li>01:01 - Expand search scope to include search words</li> <li>04:02 - Hide show parent column</li> <li>04:33 - Include 'categories' within search scope</li> <li>07:42 - Select category function</li> <li>09:02 - Avoid repeating categories</li> <li>11:58 - Revamp original cart</li> <li>16:07 - Refactoring form fields from line items to grid</li> <li>20:08 - Inject cart list into cart module</li> <li>21:18 - Inject cart length into nav module</li> <li>23:41 - Ensure variables import correctly</li> <li>29:04 - Saving shipping to local storage</li> <li>33:11 - Refactoring into. a for loop</li>  </ul></div></div>",
                "pubDate": "Mon, 23 Aug 2023 07:43:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-4582275886330720454"
            }, {
                "title": "React.js Tutorial 3: From Cart to E-Commerce Web App",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/08\/reactjs-tutorial-3-from-cart-to-e.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/iZnrf1yQG1U' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>In this lesson write the product details module.</p><label>Lesson outline:</label><ul><li>03:33 - Passing selected item ideas</li><li>09:15 - Rectoring solution</li><li>09:35 - Product image library</li><li>13:44 Product quantity selected</li><li>16:33 - JSX refactoring</li><li>21:19 - Submit to cart within App.js</li><li>29:22 - Save sales locally for temporary confirmation</li><li>30:29 - Bootstrap 5 utilities</li></ul><p>GitHub:<br/><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-3' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial-3</a></p><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Mon, 21 Aug 2023 14:32:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-1364411028278314936"
            },
            {
                "title": "React.js Tutorial 2: From Cart to E-Commerce Web App",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/08\/reactjs-tutorial-2-from-cart-to-e.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/fYjBPcyz_Pw' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>In this lesson we build our shopping page module where our products are randomly selected and displayed.</p><label>Lesson outline:</label><ul><li>00:15 - My original Mongo DB project</li> <li>06:18 - Shop page random display</li><li>10:07 - Build mapped JSX option 1</li><li>12:52 - Shop page with random display</li><li>18:55  - Adding CSS for loader animation</li><li>21:02 - Add working JSX from original project</li><li>23:09 - Make JSX adjustments for this project</li><li>26:37 - Multi pass useEffect()</li><li>27:42 - Never display same product twice</li></ul><p>GitHub:<br/><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial-2' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial-2</a></p><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Thu, 03 Aug 2023 15:29:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7308868066976542308"
            },
            {
                "title": "React.js Tutorial 1: From Cart to E-Commerce Web App",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/08\/reactjs-tutorial-1-from-cart-to-e.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/eCGVUais3Nc' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>In this lesson we pick from our 'cart' tutorial and build an API for our product search terms and images.</p><label>Lesson outline:</label><ul><li>00:06 - Update SQL database - we have new data coming in</li><li>00:34 - Building search terms array - Build an input field & button</li><li>01:46 - Update search words function</li><li>03:43 - Our resources include Bootstrap 5 documentation</li><li>08:06 - Create a default when no data exists</li><li>11:11 - Utilize React's useEffect() to get data on module load</li><li>13:29 - Update client side JSON object</li><li>15:34 - Update server side JSON object</li><li>21:05 - Switch from badge icon to button</li><li>23:02 - Grab All Items upon update success</li><li>24:10 - Create default items</li><li>25:00 - Avoid duplicate search terms</li><li>26:03 - Item images array</li><li>27:33 - Copy paste JSX</li><li>29:37 - Update client side images object</li><li>30:34 - Update sever side images object</li><li>31:04 - Load images on module load</li><li>35:12 - Image preview within the CMS (Content Management System)</li><li>36:23 - Custom CSS from CMS thumbnails</li><li>39:11 - Set images on module load</li><li>40:07 - More CSS trial & error</li><li>41:17 - Chrome inspector window for faster results</li><li>41:45 - Store arrays as URI component</li></ul><p>GitHub:<br/><a href='https://github.com/aaronrs2002/cart-ecomm-tutorial' target='_blank'>https://github.com/aaronrs2002/cart-ecomm-tutorial</a></p><p><a href='Required prerequisite tutorial: https://www.youtube.com/playlist?list=PLxaq32Ptw4pkHgzkOzkTkFJiVMp60iav-' target='_blank'>Required prerequisite tutorial</a></p><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Thu, 03 Aug 2023 15:27:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-3724542299370120741"
            },
            {
                "title": "JavaScript: Read &amp; Analyze Bank CSV/ASCII files",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/07\/javascript-read-analyze-bank-csvascii.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/lNk7VpwEJOY' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>Read CSV/ASCII bank files with this freeJavaScript web application</p><p>Upload files to your browser's local storage for you to analyze. No API's just a static JavaScript banking tool.</p><p>Use the tool here:<br/><a href='https://aaronrs2002.github.io/analyze-bank-files/' target='_blank'>https://aaronrs2002.github.io/analyze-bank-files/</a></p><p>Open source code:<br/><a href='https://github.com/aaronrs2002/analyze-bank-files' target='_blank'>https://github.com/aaronrs2002/analyze-bank-files</a></p><p>ASCII delimited (a.k.a. comma delimited) is a much used exchange file format that is used and recognized by many database programs. An ASCII delimited file is a text file with the extension . csv. All fields of a record are on one line, separated typically by commas*.</p><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Thu, 20 Jul 2023 21:24:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6994420513965578512"
            },
            {
                "title": "IT Ticket manager & workflow platform (9 lesson tutorial - open source)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/07\/it-ticket-manager-workflow-platform-9.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/P-ml6DBINN4' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div><div class='col-md-6'><p>Includes a workflow task manager, a priority color coded task timeline, an invoice generator with budgeting system, a ticket time-clock module and a message board.</p><p><a href='https://www.youtube.com/watch?v=P-ml6DBINN4&list=PLxaq32Ptw4plKHJg3db4clRMNuxezJwR2' target='_blank'>Here is the youTube link for this playlist</a></p><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Thu, 20 Jul 2023 21:02:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-4229911439048823893"
            },
            {
                "title": "Ticket Management System - React.js Tutorial 9 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/07\/ticket-management-system-reactjs.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width:100%;height:auto;min-height:270px' src='https://www.youtube.com/embed/48t2_ObqpRs' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><h2>Clock how much time was worked for each specific ticket.</h2> GitHub Code: <a href='https://github.com/aaronrs2002/workflow-tutorial-9' target='_blank'>https://github.com/aaronrs2002/workflow-tutorial-9</a></p></div ><div class='col-md-6'><ul><li>01:47 - TimeClock filter/search</li><li>02:15 - Update ticket ID</li><li>05:05 - Hours data resides in the tickets table</li><li>05:13 - Clock IN/OUT client side functionality</li><li>20:04 - Clock IN/OUT server side functionality</li><li>21:48 - Ticket priority displayed</li></ul><p>Web-Presence LLC</p></div></div >",
                "pubDate": "Sun, 02 Jul 2023 21:05:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-4545652924198087670"
            },

            {
                "title": "Ticket Management System - React.js Tutorial 8 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/06\/build-save-and-print-professional.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width:100%;height:auto;min-height:270px' src='https://www.youtube.com/embed/HzafZxSqYoY' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>In this lesson we gather the start end date for each ticket along with all the project steps start and stop dates for our timeline.</p> GitHub Code: <a href='https://github.com/aaronrs2002/workflow-tutorial-8' target='_blank'>https://github.com/aaronrs2002/workflow-tutorial-8</a></p></div ><div class='col-md-6'><ul><li>02:14 - Workflow module updates</li><li>19:39 - Server side invoice module</li><li>23:56 - Client side invoice module</li><li>25:20 - Local company data</li><li>26:51 - Client side invoice module</li><li>28:08 - Invoice variables</li><li>32:20 - Build item chart function</li><li>33:34 - Calculate Function</li><li>34:18 - Delete item function</li><li>35:29 - Add item function</li><li>39:52 - Updated invoice info</li><li>44:41 - Save invoice function</li><li>52:22 - Populate fields</li><li>01:00:18 - Set for new invoice</li><li>01:01:43 - Display specific invoice</li><li>01:05:34 - Write invoice JSX</li> <li>01:25:18 - CSS updates</li><li>01:34:14 - Budget chart module</li><li>01:39:28 - Add date selector module</li><li>01:41:46 - Save invoice fix</li><li>01:42:56 - Finalized invoice save and print</li></ul><p>Web-Presence LLC</p></div></div >",
                "pubDate": "Thu, 22 Jun 2023 22:58:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-3017837150938934194"
            },
            {
                "title": "Ticket Management System - React.js Tutorial 7 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/06\/tutorial-7.html",
                "description": "<div class='row'><div class='col-md-6'><iframe style='width:100%;height:auto;min-height:270px' src='https://www.youtube.com/embed/yqD-9SQ-yQ8' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe><p>In this lesson we gather the start end date for each ticket along with all the project steps start and stop dates for our timeline.</p><p>GitHub Code:<a href='https://github.com/aaronrs2002/workflow-tutorial-7' target='_blank'>https://github.com/aaronrs2002/workflow-tutorial-7</a></p></div><div class='col-md-6'><ul><li>00:25 - CSS Update active class goes yellow</li><li>01:51 - Sharing the date module dynamic max days</li><li>04:34 - Passing activeTicket between Modules</li><li>05:46 - code & padding refactoring</li><li>07:09 - Integrate date select module</li><li>10:42 - npm install Apex Charts</li><li>11:01 - Create timeline module</li><li>12:28 - Due date's migration to the ticketId</li><li>16:45 - React Hooks Apex Chart timeline</li><li>17:59 - Adding chart currentData object</li><li>18:38 - populateFields() function serving the timeline</li><li>26:52 - Validate and insert date menus</li><li>31:51 - Get workflow data for timeline</li><li>35:11 - Parsing nested objects from SQL</li><li>37:28 - User walk through</li><li>39:33 - Troubleshoot issues</li><li>42:14 - Update multiple SQL tables with one statement</li></ul><p>Web-Presence LLC</p></div></div>",
                "pubDate": "Fri, 09 Jun 2023 16:24:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7450383526664165384"
            },
            {
                "title": "Ticket Management System - React.js Tutorial 6 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/06\/ticket-management-system-reactjs_1.html",
                "description": "<div class=\"row\">  <div class=\"col-md-6\"><iframe style=\"width: 100%; height: auto; min-height: 270px;\" src=\"https:\/\/www.youtube.com\/embed\/3KJwvR-TsaI\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe> <p>TICKET MODULE - Ticket priority: low, medium, high, critical - Bug report or new feature - Assign tickets to users - Ticket due date<\/p>            <p>GitHub Code:<a href=\"https:\/\/github.com\/aaronrs2002\/workflow-tutorial-6\" target=\"_blank\" >https:\/\/github.com\/aaronrs2002\/workflow-tutorial-6<\/a><\/p><\/div>      <div class=\"col-md-6\">                <ul>          <li>00:22 - Lesson outline<\/li><li>00:38 - Update MySQL \"tickets\" table<\/li><li>01:40 - Add \"priority\" to client side of API<\/li><li>04:08 - Add \"priority\" to server side of API<\/li><li>05:12 - \"bug\" or \"new feature\" added to client side of API<\/li><li>09:03 - \"Assign to\" option added to client side of API<\/li><li>11:01 - \"Assign to\" option added to server side of API<\/li><li>12:34 - Write universal date module<\/li><li>13:24 - Parent must pass menu name<\/li><li>9:03 - Integrate date module with the UI<\/li><li>22:16 - Preparing month and day numbers for selection menu<\/li><li>23:29 - For each to reset select menus<\/li><li>24:53 - Concatenate due date<\/li><li>26:00 - re-use resetFunction()<\/li><li>26:15 - Incorporate \"due date\" into API<\/li>          <\/ul>              <p>Web-Presence LLC<\/p>                                                                                        <\/div>  <\/div>https:\/\/youtu.be\/3KJwvR-TsaI",
                "pubDate": "Thu, 01 Jun 2023 18:15:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6213122091635761500"
            },

            {
                "title": "Ticket Management System - React.js Tutorial 5 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/06\/ticket-management-system-reactjs.html", "description": "<div class=\"row\">  <div class=\"col-md-6\"><iframe style=\"width: 100%; height: auto; min-height: 270px;\" src=\"https:\/\/www.youtube.com\/embed\/KDqFXBnWL6w\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe> <p>In this lesson we build the Create, Read, Update and Delete, client and server side, functionality for a messaging module. <\/p>            <p>GitHub Code:<a href=\"https:\/\/github.com\/aaronrs2002\/workflow-tutorial-5\" target=\"_blank\" >https:\/\/github.com\/aaronrs2002\/workflow-tutorial-5<\/a><\/p><\/div>      <div class=\"col-md-6\">                <ul>          <li>00:19 - Build message table<\/li><li>01:27 - Server side message.js API<\/li><li>08:51 - Build client side API functions for messing module<\/li><li>18:36 - Build the \"UI\" with JSX<\/li><li>22:43 - Integrate messages module in App.js<\/li><li>23:20 - setActiveTicket becomes global<\/li><li>25:48 - Map through searchable message feed object<\/li><li>35:39 - Build CSS load animation deploy front end<\/li><li>37:35 - Upon success getMessages()<\/li><li>38:47 - Consolidate all ticket menus<\/li><li>39:54 - Integrate getTickets() with global App.js<\/li><li>41:49 - Message board visibility<\/li><li>44:31 - Characters SQL does not like<\/li><li>50:47 - Move getMessages() for global sharing<\/li><li>55:52 - Build a reset function<\/li><li>1:00:07 - encodeURIcomponent() to fix character issues<\/li><li>1:02:55 - Utilizing Regex to escape illegal characters<\/li>          <\/ul>              <p>Web-Presence LLC<\/p>                                                                                        <\/div>  <\/div>", "pubDate": "Thu, 01 Jun 2023 18:11:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5616575615762649343"
            },
            {
                "title": "Ticket Management System - React.js Tutorial 4 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/05\/ticket-management-system-reactjs.html",
                "description": "<div class=\"row\">  <div class=\"col-md-6\"><iframe style=\"width: 100%; height: auto; min-height: 270px;\" src=\"https:\/\/www.youtube.com\/embed\/mWJ7Cuj9UPs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe> <p>A project has many steps, each step has many tasks, each task is either \"waiting\", \"in progress\", \"ready for review\" or \"complete\". By completing all the tasks in a step, that step is complete. By completing all the steps, the project is complete.<\/p><p>In future lessons I plan on adding a \"message board.\"<\/p>         <\/div>      <div class=\"col-md-6\">                     <ul>          <li>00:14 - Fix previous bug<\/li>           <li>02:15 - Verify bug fix<\/li>           <li>02:34 - Update task status<\/li>           <li>02:50 - Bootstrap color codes<\/li>           <li>11:35 - Review for mistakes<\/li>          <\/ul>       <p>GitHub Code:<a href=\"https:\/\/github.com\/aaronrs2002\/workflow-tutorial-4\" target=\"_blank\" >https:\/\/github.com\/aaronrs2002\/workflow-tutorial-4<\/a><\/p>          <p>Web-Presence LLC<\/p><\/div>  <\/div>", "pubDate": "Tue, 23 May 2023 15:46:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-3743604630156956283"
            },
            {
                "title": "Ticket Management System - React.js Tutorial 3 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/05\/reactjs-digital-workflow-application_17.html",
                "description": "<div class='row'>  <div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/rwQQWFvMe2I' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe> <p>In this lesson we build a CRUD, (Create, Read, Update and Delete), API for our ticketing system module of our digital workflow web application.<\/p>    <p>In future lessons I plan on adding a 'message board.'<\/p>            <p>GitHub Code:<a href='https:\/\/github.com\/aaronrs2002\/workflow-tutorial-3' target='_blank' >https:\/\/github.com\/aaronrs2002\/workflow-tutorial-3<\/a><\/p>        <p>REQUIRED FIRST: JWT tutorial: <a href='https:\/\/youtu.be\/fdwgRxFuf6M' target='_blank' >https:\/\/youtu.be\/fdwgRxFuf6M <\/a><\/p><p>The (JSON Web Token) JWT framework tutorial is required in order to understand what we are working with in this tutorial.                <\/p>        <\/div>      <div class='col-md-6'>                <h5>Building an API using React.js, Node.js and MySQL:<\/h5>        <ul>                  <li> 00:06 - Create 'tickets' MySQL table <\/li> <li>00:42 - Write 'TicketBuilder' client side module <\/li> <li>01:50 - Write client side API get ticket-info <\/li> <li>03:54 - Write server side API get ticket-info <\/li> <li>07:28 - Write 'timestamp()' function <\/li> <li>11:06 - Write client side UI using JSX <\/li> <li>15:30 - Finish 'timestamp()' function <\/li> <li>16:42 - Write JSX input fields <\/li> <li>18:53 - Fix mistakes <\/li> <li>19:47 - Write client 'post' 'addTicket()' <\/li> <li>23:39 - Move 'get-ticket' API (written in App.js for ideal distribution) <\/li> <li>24:46 - Write client edit 'put' 'ticket-info' <\/li> <li>26:11 - Fixing errors <\/li> <li>29:45 - API response res.data.affectedRows <\/li> <li>31:02 - Get all tickets <\/li> <li>32:48 - Client side get one ticket <\/li> <li>34:22 - Server side get one ticket <\/li> <li>36:31 - Confirm API connection <\/li> <li>36:53 - Client side 'deleteTicket()' <\/li> <li>38:58 - Write confirm delete alert <\/li> <li>41:24 - Fix delete 404 error <\/li> <li>42:14 - Response based on 'affectedRows' <\/li> <li>43:08 - Test all 'Create, Read, Update & Delete' <\/li> <li>43:43 - Confirm email address security <\/li> <li>44:29 - Map list 'populateFields()' function <\/li> <li>45:48 - Test workflow module with new dynamic data <\/li> <li>46:56 - Test all 'Create, Read, Update & Delete' again <\/li>          <\/ul>              <p>Web-Presence LLC<\/p>                                                                                        <\/div>  <\/div>",
                "pubDate": "Wed, 17 May 2023 21:16:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7545813193618551702"
            },
            {
                "title": "Ticket Management System - React.js Tutorial 2 (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/05\/reactjs-digital-workflow-application.html",
                "description": "<div class='row'>  <div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/OZmu7VVm0gM' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <p>GitHub Code:<a href='https:\/\/github.com\/aaronrs2002\/workflow-tutorial-2' target='_blank' >https:\/\/github.com\/aaronrs2002\/workflow-tutorial-2<\/a><\/p>        <p>REQUIRED FIRST: JWT tutorial: <a href='https:\/\/youtu.be\/fdwgRxFuf6M' target='_blank' >https:\/\/youtu.be\/fdwgRxFuf6M <\/a><\/p><p>The (JSON Web Token) JWT framework tutorial is required in order to understand what we are working with in this tutorial.                <\/p>        <\/div>      <div class='col-md-6'>                <h5>  Building REST API endpoints - Displaying & Editing Data:<\/h5>        <ul>          <li>00:39 - Build JSX to map through our data          <\/li><li>15:43 - Write JavaScript client side functions           <\/li><li>19:09 - MySQL database create workflow table           <\/li><li>26:44 - Building temporary data ticket list           <\/li><li>31:03 - Write Node.js data end points             <\/li><li>32:52 - Write server side routes             <\/li><li>38:31 - Check API connections & data payload             <\/li><li>52:16 - Debug, search for syntax errors and mistakes             <\/li><li>59:11 - Clear out error logging             <\/li>       <\/ul>              <p>Web-Presence LLC<\/p>                                                                                        <\/div>  <\/div>",
                "pubDate": "Mon, 01 May 2023 21:51:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-872605168354711481"
            },
            {
                "title": "Ticket Management System - React.js Tutorial (By Aaron Smith: Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/04\/reactjs-workflow-application-tutorial.html",
                "description": "<div class='row'> <div class='col-md-6'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/79otWzz3TmE' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe><p>This is could be described as the 'advanced to-do list' template of a project workflow. For example, a project has many steps, each step has many tasks, each task is either 'waiting', 'in progress', 'ready for review' or 'complete'. By completing all the tasks in a step, that step is complete. By completing all the steps, the project is complete.<\/p>   <p>In future lessons I plan on adding a 'ticketing system' and a 'message board.'<\/p>       <p>GitHub Code:<a href='https:\/\/github.com\/aaronrs2002\/workflow-tutorial-1' target='_blank' >https:\/\/github.com\/aaronrs2002\/workflow-tutorial-1<\/a><\/p>       <p>REQUIRED FIRST: JWT tutorial: <a href='https:\/\/youtu.be\/fdwgRxFuf6M' target='_blank' >https:\/\/youtu.be\/fdwgRxFuf6M <\/a><\/p><p>The (JSON Web Token) JWT framework tutorial is required in order to understand what we are working with in this tutorial.              <\/p>       <\/div>     <div class='col-md-6'>              <h5>Tutorial outline:<\/h5>       <ul>         <li>00:54 - Download React.js JWT Framework         <\/li>         <li>01:42 - NPM Install JWT Login Framework                     <\/li>         <li>01:59 - NPM Start JWT Login Framework (localhost:3000)                     <\/li>         <li>02:08 - Setup MySQL Database                     <\/li>         <li>03:12 - Configure MySQL Database                     <\/li>         <li>03:37 - Start 'Back End' Server (localhost:5000)                     <\/li>         <li>03:47 - Confirm Schema Details                     <\/li>         <li>04:01 - Login & Confirm                     <\/li>         <li>04:13 - JSON Web Token only created upon login                     <\/li>         <li>04:43 - Build 'Create' & 'Delete' Functionality                     <\/li>         <li>05:57 - Which 'func' state (Which function is the user performing?)                     <\/li>         <li>06:45 - Plugin workflow module                     <\/li>         <li>08:03 - Tailor interface                     <\/li>         <li>08:37 - Build 'Add Step' form                     <\/li>         <li>10:03 - Build 'Delete Step' select menu                     <\/li>         <li>11:59 - Temporary default data                     <\/li>         <li>12:37 - Build 'Delete Confirmation' alert warning                     <\/li> <li>15:30 - Write delete function <\/li>         <li>16:41 - Import Validate function and write 'create' function <\/li>         <li>18:54 - Import 'showAlert' function <\/li>         <li>19:43 - Reset input fields<\/li><\/ul><p>Web-Presence LLC<\/p><\/div> <\/div>",
                "pubDate": "Wed, 26 Apr 2023 18:16:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5599949012740840915"
            },
            {
                "title": "JavaScript 'BINGO' in less than 300 lines of code By: Aaron Smith Web-Presence LLC",
                "link": "https:\/\/web-presence-news.blogspot.com\/2023\/01\/javascript-bingo-in-less-than-300-lines.html",
                "description": "<div class='row'>  <div class='col-md-6'>   <iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/n_v3A3Ny_cs' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <\/div>  <div class='col-md-6'>    <p>In this video I walk through the game of Bingo, which was written in JavaScript<\/p><p>Play BINGO here: <a href='https:\/\/aaronrs2002.github.io\/bingo\/' target='_blank'>https:\/\/aaronrs2002.github.io\/bingo\/<\/a><\/p>        <p>GitHub tutorial code:     <a href='https:\/\/github.com\/aaronrs2002\/bingo\/' target='_blank'>https:\/\/github.com\/aaronrs2002\/bingo\/<\/a> <\/p>     <h4>Outline:<\/h4>         <ul>      <li>00:13 - Walking through the index.html<\/li><li>05:11 - startGame() function<\/li><li>05:50 - runGame() function<\/li><li>07:54 - verifySquare() function<\/li><li>09:06 - startCalling() function<\/li><li>11:45 - checkForBingo() function<\/li><li>14:40 - setPlayerMoney() function<\/li>           <\/ul>    <i>Music: Russian Dance - Joey Pecoraro<\/i>  <\/div><\/div>",
                "pubDate": "Wed, 04 Jan 2023 21:47:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-1935989543947079484"
            },
            {
                "title": "CSS & JavaScript Tutorial 3: Multiple clients one multi-themed multi-page template - By: Aaron Smith - Web-Presence LLC",
                "link": "https:\/\/web-presence-news.blogspot.com\/2022\/12\/css-javascript-tutorial-3-multiple.html",
                "description": "<div class='row'><div class='col-md-12'><iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/oJh1ZAaqaRQ' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <\/div>  <div class='col-md-12'><p>Watch as I write a static page that hosts multiple clients on one template. This is a single page JavaScript application that gives the illusion of multiple pages by dynamically calling data and updating the DOM in realtime. <\/p><p>This tutorial will be an example of a baseball league website where each team gets it's own theme and content, images, text, videos, API endpoints etc...<\/p><p>GitHub tutorial code:<\/p><a href='https:\/\/github.com\/aaronrs2002\/multi-themed-template-tutorial-3' target='_blank'>https:\/\/github.com\/aaronrs2002\/multi-themed-template-tutorial-3<\/a><p>Demo of different teams using the same template:<\/p><a href='https:\/\/aaronrs2002.github.io\/multi-themed-template-tutorial-3\/?client=option-1&' target='_blank'>https:\/\/aaronrs2002.github.io\/multi-themed-template-tutorial-3\/?client=option-1&<\/a><br\/><a href='https:\/\/aaronrs2002.github.io\/multi-themed-template-tutorial-3\/?client=option-2&' target='_blank'>https:\/\/aaronrs2002.github.io\/multi-themed-template-tutorial-3\/?client=option-2&<\/a><br\/><strong>Outline:<\/strong><ul><li>01:32 - Write a content card and assign it specific data ('data targets')<\/li><li>03:13 - Update footer style<\/li><li>04:35 - Build out json for multiple pages<\/li><li>06:20 - Prepare HTML for multiple images<\/li><li>08:19 - One baseball league website multiple team\/clients represented<\/li><li>08:35 - Darken image to make text legible (recommended above css filters)<\/li><li>10:25 - Saving images in json data<\/li><li>12:42 - Consistent sizing brings balance<\/li><li>15:25 - Mobile menu & navigation<\/li><li>21:17 - Nav links must display 'active' or 'not active'<\/li><li>23:22 - Write a contact form<\/li><li>25:54 - Each client get custom endpoints for posting<\/li><li>29:04 - Manage multi-page content<\/li><li>30:56 - Writing data targets within dynamic content<\/li><li>34:05 - Insert dynamic YouTube video player<\/li><li>37:21 - Target story data to the second page (this is the same data used for the teaser substring)<\/li><li>38:35 - Adding JavaScript into json content<\/li><li>39:52 - Adding contact info to json data (this data appears in multiple areas)<\/li><li>43:34 - Applying different background images per team\/client. We did this with CSS. Now we will do it with JavaScript<\/li><li>44:24 - Crop, shape, and filter background images without Photoshop<\/li><li>49:08 - POST with traditional HTML functionality<\/li><li>50:54 - Replace old mobile images<\/li><\/ul><\/div><\/div>",
                "pubDate": "Wed, 07 Dec 2022 23:09:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5290574569406642497"
            },

            {
                "title": "CSS & JavaScript Tutorial 2: Multiple clients one multi-themed template - By: Aaron Smith - Web-Presence LLC",
                "link": "https:\/\/web-presence-news.blogspot.com\/2022\/12\/css-tutorial-custom-themes-with.html",
                "description": " <div class='row'>   <div class='col-md-12'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/65gwEIyfgrY' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <\/div>      <div class='col-md-12'>         <h3>GitHub Source code for this tutorial:<a href='https:\/\/github.com\/aaronrs2002\/css-custom-responsive-themes-tutorial' target='_blank'>https:\/\/github.com\/aaronrs2002\/css-custom-responsive-themes-tutorial<\/a><\/h3>  <ul>         <li>00:48 - Build static HTML page  <\/li> <li>01:25 - Copy paste HTML navigation menu<\/li> <li>02:14 - Import images<\/li> <li>02:59 - Import custom fonts (from Google Fonts)<\/li> <li>06:25 - Integrate data-design to HTML body tags & CSS (remember CSS works in hierarchy)<\/li> <li>08:33 - CSS filters & z-index HTML overlay<\/li> <li>11:59 - Create theme picker HTML<\/li> <li>13:06 - Create theme picker CSS<\/li> <li>16:59 - Create theme picker JavaScript<\/li> <li>19:35 - Watch data-design update live<\/li> <li>20:00 - How is it on mobile devices?<\/li> <li>20:55 - Write responsive CSS (#bannerTxt needs to adapt to mobile)<\/li> <li>21:48 - Darken background image to make text legible<\/li> <li>23:15 - Adjust theme pallette for mobile devices<\/li> <li>23:48 - Test responsive CSS<\/li> <li>24:04 - Fix text 'run off' (this was created earlier by #bannerTxt position value)<\/li> <li>24:30 - Utilize the dev console for trial & error<\/li> <li>26:46 - #bannerTxt width moved to global scope for all screen sizes<\/li>        <\/ul>                          <i>GitHub repo:<\/i>        <a href='https:\/\/github.com\/aaronrs2002\/css-custom-responsive-themes-tutorial' target='_blank'>https:\/\/github.com\/aaronrs2002\/css-custom-responsive-themes-tutorial<\/a> <p>Web-Presence LLC<\/p><\/div>    <\/div> ",
                "pubDate": "Thu, 01 Dec 2022 16:43:00 ", "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5113463437405208014"
            }, {
                "title": "Free online poker",
                "link": "https:\/\/web-presence-news.blogspot.com\/2022\/10\/free-online-poker.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/BhLFB6ZxLMA' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <\/div>      <div class='col-md-6'> <h5>I wrote poker for the public to play here: <a href='https:\/\/aaronrs2002.github.io\/texas-holdem\/' target='_blank' >https:\/\/aaronrs2002.github.io\/texas-holdem\/<\/a><\/h5> <p>I have written 'Texas holdem' and 'Five card draw' for the public to play free online. There's no app to install. These games work on any device and are hosted for free on my gitHub account, so special thanks to them.<\/p>         <p>There's no app to install. This is for the public to play thanks to free hosting from gitHub.<\/p>        <i>This game and more are public on my GitHub repo:<\/i>        <a href='https:\/\/github.com\/aaronrs2002\/texas-holdem' target='_blank'>https:\/\/github.com\/aaronrs2002\/texas-holdem<\/a>                 <p>Web-Presence LLC<\/p><\/div>    <\/div> ",
                "pubDate": "Fri, 21 Oct 2022 16:13:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-2220074727304341411"
            },
            {
                "title": "JavaScript tutorial: Poker in 500 lines (By: AaronSmith Web-Presence LLC)",
                "link": "https:\/\/web-presence-news.blogspot.com\/2022\/10\/javascript-tutorial-poker-in-500-lines.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/M7mk-b3-O9U' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <\/div>      <div class='col-md-6'> <h5>PLAY THIS GAME FREE HERE: <a href='https:\/\/aaronrs2002.github.io\/black-jack\/' target='_blank'>https:\/\/aaronrs2002.github.io\/black-jack\/<\/a><\/h5> <p>I have written the game of poker in 500 lines of JavaScript. This video is a walk through of the code, which is available to the public here:   <a href='https:\/\/github.com\/aaronrs2002\/poker' target='_blank'>https:\/\/github.com\/aaronrs2002\/poker<\/a><\/p>         <p>There's no app to install. This is for the public to play thanks to free hosting from gitHub.<\/p>        <i>This game and more are public on my GitHub repo:<\/i>        <a href='https:\/\/github.com\/aaronrs2002' target='_blank'>https:\/\/github.com\/aaronrs2002<\/a><p>Web-Presence LLC<\/p> <\/div>    <\/div> ",
                "pubDate": "Mon, 10 Oct 2022 16:28:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-1720851442367407872"
            },
            {
                "title": "Free games I wrote",
                "link": "https:\/\/web-presence-news.blogspot.com\/2022\/09\/free-games-i-wrote.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/Mn8Vk0Ox4gY' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>  <\/div>      <div class='col-md-6'>          <a href='https:\/\/aaronrs2002.github.io\/black-jack\/' target='_blank'><h3>PLAY GAMES FREE HERE:<\/h3><\/a> <p>I'm linking all my javascript web app games into a network on GitHub since they, so generously, allow hosting for free. Have fun playing. There's nothing to install.<\/p>        <b>Currently I'm offering:<\/b>        <ul>   <li>2 Levels of trivia<\/li><li>Build your own trivia option to share with friends<\/li><li>Slot Machine<\/li><li>Craps<\/li><li>Black Jack\/21<\/li>  <\/ul>        <i>All these games are public on my GitHub repo:<\/i>        <a href='https:\/\/github.com\/aaronrs2002' target='_blank'>https:\/\/github.com\/aaronrs2002<\/a>                 <p>Web-Presence LLC<\/p>                                                                                           <\/div>    <\/div>",
                "pubDate": "Thu, 15 Sep 2022 20:30:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-4833765024455230355"
            },
            {
                "title": "JavaScript Word Game - Overview",
                "link": "https:\/\/web-presence-news.blogspot.com\/2022\/09\/javascript-word-game-overview.html",
                "description": " <iframe style='width: 100%; height: auto; min-height: 270px;' src='https:\/\/www.youtube.com\/embed\/MYQ-VRPUE4s' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen><\/iframe>             ",
                "pubDate": "Tue, 13 Sep 2022 17:53:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6695011510134981974"
            },
            {
                "title": "Decentralized social media app tutorial - Intro - By Aaron Smith",
                "link": "https://web-presence-news.blogspot.com/2022/06/decentralized-social-media-app-tutorial.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/tsDgPRyKLlQ' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>                 </div>      <div class='col-md-6'><p>I thought this would be a great option for a tutorial:</p>                 <ul>          <li><a href='https://www.youtube.com/playlist?list=PLxaq32Ptw4pnmS5Ff7xrcEThGL0uDbA1P' target='_blank'>Tutorial Playlist</a></li>           <li><a href='https://github.com/aaronrs2002/social-media-tutorial' target='_blank'>Github Link</a></li>        </ul> <ul><li>  1. Decentralized social media app \t<ul><li>A. News aggregate based on your news feed selections</li>\t<li>B. Easy to add and delete news feeds to your own profile</li>\t<li>C. Built in title search/filter</li>      </ul>  </li><li>2. Social media web-app   <ul><li>A. Invite a network of friends</li>\t<li>B. Everyone shares their different news feeds</li>\t<li>C. Curate which stories you want by filtering out stories consisting of specific words</li>\t<li>D. Communicate with your network with the built in messenger</li>  </ul>    </li><li>3. Personalize your app   <ul>    <li>A. Banner updates</li>\t \t<li>B. Avatar updates</li>    <li>C. Choose from any “Bootswatch theme”</li>  </ul>         </li><li>4. Your own private network. Works on any device. No App Store.  No contract.</li>        </ul>\t         <p><a href='https://youtu.be/4QP8J0sY3iY' target='_blank'>Link to the original demo video:</a></p>                  <p>Web-Presence LLC</p>                                                                                                   </div>     </div>",
                "pubDate": "Thu, 02 Jun 2022 20:20:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6647982402169492612"
            },
            {
                "title": "Point of Sale Tutorial Introduction - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/05/point-of-sale-tutorial-introduction.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/q6I5FM8K8U4' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>       </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <p>Follow me through a basic introduction to writing a cart on the client side first. Along with a cart, we will build a Purchase Log, a Content Management System for inventory and Sales Analytics. In later tutorials we will take this cart to the next level using a database and secure login for multiple users.</p> <p><a href='https://www.youtube.com/playlist?list=PLxaq32Ptw4pkHgzkOzkTkFJiVMp60iav-' target='_blank'>Tutorial Playlist</a>  </p>                <p>Web-Presence LLC</p>                                                                                                   </div>     </div>",
                "pubDate": "Tue, 17 May 2022 19:41:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6903469115906963988"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 7 - Integrate modules into framework  - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/05/reactjs-point-of-sale-tutorial-part-7.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/tlEcFFzXoSY' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>       </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <p>This is the final video where we take the login framework from lesson 6 and combine it with our modules from lesson 5. We clear out all the local storage and replace it with api calls to our database.</p>                   <a href='https://github.com/aaronrs2002/cart-tutorial-7' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                          </div>     </div>",
                "pubDate": "Fri, 13 May 2022 00:08:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5922617954388475099"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 6 - Building a Login Framework - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/05/reactjs-point-of-sale-tutorial-part-6.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/fdwgRxFuf6M' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>  </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <p>In this lesson we build the client-side and the server-side of a JSON Web Token login framework using Node.js for the server-side and React.js for the client-side. In future lessons we will be plugging web-apps we build into this secure framework.</p>             <a href='https://github.com/aaronrs2002/jwt-login-framework' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                          </div>     </div>",
                "pubDate": "Tue, 10 May 2022 13:32:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8899803719711431048"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 5 - Building analytics using Apex Charts - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/04/test.html",
                "description": " <div class='row'>   <div class='col-md-6'> <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/w73lHenpOJs' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>  </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <ul>          <li>Add quantity to item object</li>           <li>Modularize time selector</li>          <li>Filter purchases by user</li>          <li>Build Sales Analytics</li>          <li>Small bug fixes</li>        </ul>  <p>Follow me through a basic introduction to writing a cart on the client side first. Along with a cart, we will build a Purchase Log, a Content Management System for inventory and Sales Analytics.</p>  <p>In later tutorials we will take this cart to the next level using a database and secure login for multiple users.</p>        <a href='https://github.com/aaronrs2002/cart-tutorial-5' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                           </div>    </div>",
                "pubDate": "Wed, 27 Apr 2022 15:40:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-3892557557104752097"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 4 - Building a CRUD Interface - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/04/required-skills-to-complete-tutorial.html",
                "description": " <div class='row'>   <div class='col-md-6'>  <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/Ms4ugO7M4D4' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>  </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <ul>          <li>Refactoring filter           <li>Build Content management System for 'inventory module'</li>          <li>Front End Validation</li>          <li>Build data in local storage for prototyping (db comes in later episodes)</li>          <li>Build a CRUD (Create, Read, Update, Delete) interface</li>          <li>Update price variable</li>         </ul>  <p>Follow me through a basic introduction to writing a cart on the client side first. Along with a cart, we will build a Purchase Log, a Content Management System for inventory and Sales Analytics.</p>  <p>In later tutorials we will take this cart to the next level using a database and secure login for multiple users.</p>        <a href='https://github.com/aaronrs2002/cart-tutorial-4' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                           </div>    </div>",
                "pubDate": "Wed, 20 Apr 2022 00:41:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8080495091039047359"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 3 - Building Navigation - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/04/reactjs-cart-tutorial-part-3-by-aaron.html",
                "description": " <div class='row'>       <div class='col-md-6'>  <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/QTXSJp9Hy2U' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>  </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <ul>                    <li>Refactor Counter</li>          <li>Offset Timestamp</li>          <li>Show alert function</li>          <li>Create nav bar</li>          <li>Active module persistence</li>          <li>Passing active module</li>        </ul> <p>Follow me through a basic introduction to writing a cart on the client side first. Along with a cart, we will build a Purchase Log, a Content Management System for inventory and Sales Analytics.</p>  <p>In later tutorials we will take this cart to the next level using a database and secure login for multiple users.</p>                 <a href='https://github.com/aaronrs2002/cart-tutorial-3' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                           </div>    </div>",
                "pubDate": "Mon, 18 Apr 2022 23:24:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-4201204691074271901"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 2 - Building a Search - By: Aaron Smith - Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/04/reactjs-cart-tutorial-part-2-by-aaron.html",
                "description": " <div class='row'>        <div class='col-md-6'>  <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/3QgIKfOHrbg' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>  </div>      <div class='col-md-6'>         <h3>Lesson Summary:</h3>        <ul>          <li>Filter/Search products</li>          <li>Purchase log (local storage for prototyping phase, db comes in later episodes)</li>          <li>Toggle info boxes</li>          <li>More purchase log work</li>          <li>Filter/Search purchase log</li>          <li>Matching timestamps           <li>Testing</li>        </ul> <p>Follow me through a basic introduction to writing a cart on the client side first. Along with a cart, we will build a Purchase Log, a Content Management System for inventory and Sales Analytics.</p>  <p>In later tutorials we will take this cart to the next level using a database and secure login for multiple users.</p>        <a href='  https://github.com/aaronrs2002/cart-tutorial-2' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                           </div>    </div>",
                "pubDate": "Thu, 14 Apr 2022 05:50:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7655996063934192741"
            },
            {
                "title": "React.js Point of Sale Tutorial Part 1 - Building a Cart - By: Aaron Smith Web-Presence LLC",
                "link": "https://web-presence-news.blogspot.com/2022/04/reactjs-cart-tutorial.html",
                "description": " <div class='row'>        <div class='col-md-6'>  <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/rAzzAqW5dhk' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>  </div>      <div class='col-md-6'>           <h3>Lesson Summary:</h3>        <ul>                  <li>Start with create-react-app</li>          <li>Mapping through inventory list</li>          <li>CSS Tricks</li>          <li>Add item</li>          <li>Build cart module</li>          <li>Cart items</li>          <li>Remove cart items</li>          <li>Calculate function</li>        </ul>         <h3>Required skills to complete tutorial:</h3>        <p>Basic JavaScript, React.js, React Hooks, CSS, Bootstrap 4 (using a Bootswatch theme), Font Awesome 5.8.2</p>  <p>Follow me through a basic introduction to writing a cart on the client side first. Along with a cart, we will build a Purchase Log, a Content Management System for inventory and Sales Analytics.</p>  <p>In later tutorials we will take this cart to the next level using a database and secure login for multiple users.</p>        <a href='https://github.com/aaronrs2002/cart-tutorial-1' target='_blank'>Tutorial code link here.</a>                 <p>Web-Presence LLC</p>                                                                                           </div>    </div>",
                "pubDate": "Tue, 12 Apr 2022 17:31:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-4969300463499364959"
            },
            {
                "title": "Daily Habits of Successful People | Brian Tracy",
                "link": "https://web-presence-news.blogspot.com/2022/02/daily-habits-of-successful-people-brian.html",
                "description": " <div class='row'>   <div class='col-md-6'>  <iframe style='width: 100%; height: auto; min-height: 270px;' src='https://www.youtube.com/embed/nu5I85_YAak' title='YouTube video player' frameborder='0' allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>        <p><a href='https://youtu.be/nu5I85_YAak' target='_blank'>Brian Tracy - Originally Posted Jan 16, 2015</a></p></div>      <div class='col-md-6'>     <p>'The most successful people all have certain habits in their daily routines. Plan for success every day with my FREE report, No Excuses! The Power of Self-Discipline...'</p>        <p>Brian Tracy</p>                                                                                           </div>    </div>",
                "pubDate": "Thu, 03 Feb 2022 13:40:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-9045591395167637120"
            },
            {
                "title": "#techlead: Things I wish I knew when I started Programming",
                "link": "https://web-presence-news.blogspot.com/2021/02/techlead-things-i-wish-i-knew-when-i.html",
                "description": "<div class='row'>   <div class='col-md-6'>      <p>'We had an interesting discussion here on Javascript vs Python as a first language.  While both are decent, I'd probably lean towards learning Javascript first and to then move into Python/PHP (backend) second, then perhaps into mobile like Kotlin/Swift (with memory management & design) if so motivated.  For a beginner, having that immediate visual feedback is necessary to keep motivated.  My primary concern with Python is that it even though it is a more 'solid' language it is also command-line only, and that's just plain boring for most people who have no idea why they'd even want to create a command-line program, much less what a command-line is.  What do you think?'</p>       <p><a href='https://www.youtube.com/watch?v=GAgegNHVXxE' target='_blank'>TechLead - Originally Posted January 22, 2019</a></p></div>      <div class='col-md-6'>  <iframe  style='width:100%; height:auto; min-height:250px;' src='https://youtube.com/embed/GAgegNHVXxE' frameborder='0'></iframe>                                                                                             </div>    </div>",
                "pubDate": "Sun, 14 Feb 2021 13:50:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-6467503810778305690"
            },
            {
                "title": "Secret to Recruiting Rockstar Software Developers",
                "link": "https://web-presence-news.blogspot.com/2021/02/secret-to-recruiting-rockstar-software.html",
                "description": " <div class='row'>    <div class='col-md-6'>  <iframe style='width:100%; height:auto; min-height:250px;' src='https://youtube.com/embed/HFPBHCYBhRE' frameborder='0'></iframe>                                                                                             </div>  <div class='col-md-6'>         <p>Dave Mayer is CEO of Technical Integrity, one of the fastest-growing recruiting firms in Denver/Boulder. </p> <p>When he's not snowboarding, Dave is finding the best Software Developers. That's all he does... and It's not easy.</p>     <p>In this revealing interview, Dave shares:</p> <ul>  <li>- How to 'test drive' a Developer before extending an offer</li><li>- When it's a good (or bad) idea to hire an existing team of 5 Developers </li><li>- Why compensation is often the least important thing to a Developer <li>- How to find Developers these days (many are pulling their profiles off LinkedIn!)</li><li>- Interviewing Developers for culture fit, even when they're introverts</li>    </ul> <p>Pick up a copy of Jeff's bestselling book, Recruit Rockstars: The 10 Step Playbook to Find the Winners and Ignite Your Business— <a href='http://www.recruitrockstars.com' target='_blank'>recruitrockstars.com</a></p></div>       </div>",
                "pubDate": "Fri, 12 Feb 2021 12:47:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8432384767947835675"
            },
            {
                "title": "5 Google Analytics Trends to Watch Out for in 2020",
                "link": "https://web-presence-news.blogspot.com/2020/08/5-google-analytics-trends-to-watch-out.html",
                "description": " <div class='row'><div class='col-md-6'>     <iframe style='width:100%; height:auto; min-height:250px;' src='https://www.youtube.com/embed/O7Hfl7WcB74' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe>    </div> <div class='col-md-6'> <h2>MeasureSchool</h2><p>In this video, we will be looking at the top 5 Trends I see happening right now with Google Analytics. Learn how this analytics tool has changed over the years and what the near future holds for it.</p><i><a href='https://www.youtube.com/channel/UClgihdkPzNDtuoQy4xDw5mA' target='_blank'>Posted by: MeasureSchool - August 19, 2020 </a></i>  </div></div>   ",
                "pubDate": "Fri, 21 Aug 2020 21:10:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7680715412735629697"
            },
            {
                "title": "Advice on working from home",
                "link": "https://web-presence-news.blogspot.com/2020/04/advice-on-working-from-home.html",
                "description": " <div class='row'><div class='col-md-6'> <h2>Marcus Aurelius – How To Build Self Discipline</h2><p>In this video we will be talking about 10 important insights for building your Self Discipline from the writings of Marcus Aurelius. He was also a devout student of the philosophy of Stoicism. During his rule, Aurelius found the time to construct a series of autobiographical writings, now known as the Meditations. In these writings, the Marcus Aurelius offered a number of key insights on how to build self discipline.</p><a href='https://www.youtube.com/channel/UCp1mRTkVlqDnxz_9S0YD9YQ' target='_blank'>Reference: Philosophies for Life</a>   </div> <div class='col-md-6'>  <iframe style='width:100%; height:auto; min-height:250px;' src='https://www.youtube.com/embed/njDLNt-1ugM' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div></div>   ",
                "pubDate": "Tue, 14 Apr 2020 13:10:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-8143541053187017227"
            },
            {
                "title": "The days of Redux for React applications might be numbered",
                "link": "https://web-presence-news.blogspot.com/2019/12/the-days-of-redux-for-react.html",
                "description": " <div class='row'><div class='col-md-6'><iframe style='width:100%; height:auto; min-height:250px;' src='https://www.youtube.com/embed/NTDJ-NQ32_E' frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen></iframe></div> <div class='col-md-6'> <p>In this video we're just going to experiment with React Suspense data fetching. Suspense is still an EXPERIMENTAL FEATURE at this time.</p><ul><li><a href='https://reactjs.org/docs/concurrent-mode-suspense.html' target='_blank'>Suspense Docs</a></li><li><a href='https://reactjs.org/docs/concurrent-mode-intro.html' target='_blank'>Concurrent Mode Docs</a></li></ul> <i>'A less technical and more conceptual in-depth overview of React Suspense and our mental model of loading states'</i><a href='https://medium.com/react-in-depth/why-react-suspense-will-be-a-game-changer-37b40fea71ec' target='_blur'> Medium Article by: Julian Burr</a> </div></div>   ",
                "pubDate": "Tue, 17 Dec 2019 16:51:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-99850840595546818"
            },
            {
                "title": "Creating Coding Tests for Interviews",
                "link": "https://web-presence-news.blogspot.com/2019/07/creating-coding-tests-for-interviews.html",
                "description": "<i>Original Link: <a href='https://geektastic.com/coding-tests-for-interviews' target='_blank'>geektastic.com</a></i> <h3>Creating take-home coding tests for interviews</h3><p>Lots of companies use take-home coding tests for interviews during the hiring process.</p> <p>It's REALLY difficult to create that perfect online coding test that keeps the best developers interested.</p> <p>You can increase the effectiveness of a coding test for interview by using one simple rule….</p> <h3>Make the take-home code test for interview as close to the real world as you can.</h3> <p>We have a number of take-home code tests on our platform that are used in the early stages of an interview process, and the ones that receive the best feedback, the ones that have the highest percentage take up rate and interestingly the ones that generate the most effort are the ones that feel real world.</p> <p>If your business is e-commerce - build a take-home code challenge where the task is to build a shopping basket or checkout (we have one of those), if your business is booking flights ask the candidate to build a flight booking page - even better have them integrate with your API, serve up some products to add to the basket or some dummy flight data to parse and pull into the webpage.</p> <p>Having spoken to developers this is the single biggest factor that has kept software engineers interested in various challenges over the years. There is nothing more frustrating that receiving a code test do do for an interview, and seeing it is another boring algorithm like checking a string for parenthesis counts, or sorting a list without using inbuilt functions.</p> <p>Doing multiple code tests can be time consuming and tedious if you are applying for multiple jobs. When the challenge is closer to the real role it starts to get the candidate engaged with the brand, they feel like they are actually starting working there - psychologically this is a huge win. Candidates who aren't that interested in the challenge will naturally not do their best - therefore it kills multiple birds with one stone.</p> <p>One of the best ways of making your take home code challenge close to real world is to make sure the challenge poses a problem within the general business domain of the company.</p> <p>IMPORTANT NOTE: If you take this to too far and make this too domain specific, you'll end up alienating people and could end up with a coding challenge that only lets you hire people who already work for you - so remember to strike a balance.</p> <b>Code tests should all fulfil the following</b> <ul><li>Open for creative interpretation, <li>Marked by a human (if you have your coding challenges marked by a machine - please stop. Machine marking is a binary solution to a non-binary problem. People are not binary (not matter how geeky we talk). For more on this topic please read our post <a href='https://geektastic.com/blog/how-to-review-a-peer-review-code-challenge' target='_blank'>here</a>.</li><li>Used for open discussion later</li><li>Production quality code requested (Clean Code).</li><li>More than input/output of a single method.Eg, a light UI, an object model, an API call.</li><li>Simple and clear - can be summarised in a single sentence.</li><li>Time suggestion, not limit</li></ul> <b>Several BIG Topics came up in the process of our discussions:</b> <ul><li>Timed challenges.</li><li>IDE (Code Editor).</li><li>Realisticness of it being like the actual job.</li></ul> <p>So let's look at each of those points in detail.</p> <b>Timed challenges</b> <p>There are two schools of thought on this - We asked Andy Davis (who helped write this page his thoughts) who also asked <a href='https://www.linkedin.com/in/zfoltin/' target='_blank'>Zeno Foltin, a London-based (polyglot) software developer</a> here's what he said (hint they're not big fans of times challenges)</p> <p>Challenges with a hard cut off time. It seems obvious why companies might impose a time limits:</p> <p>Create a level playing field for comparison - if they have the exact same amount of time and no prior knowledge, we can accurately compare candidate solutions.Candidates know upfront that a fixed amount of of time is needed not a snow ball into hours/days and therefore are more likely to accept doing the challenge</p> <p>Zeno and I put our heads together on this one and we think not enough thought is put into the downsides of that time limit. For example:It doesn't actually measure how well they will do on the job as the time pressures in the job are not the same as examination pressures.Faster developers are NOT better developers.A candidate who is slightly slower but can model the domain well, TDD and produce something infinitely better than speedy gonzales (who only writes procedural code) may get unfairly compared as a worse developer if they couldn't get that across in the timeframe.</p> <p>Zeno said:</p> <p>“I don't think timed challenges provide any value in measuring how well the candidate will do on the job. If it's about trying to find out how someone handles pressure, do it in a pair-programming session maybe. I think it's silly to think in our creative industry that putting such pressure on people will bring the best out of them.”</p> <p>So whilst we don't think timed challenges are completely useless, it just might not be the type of comparison they think they are making - possibly just a superficial comparison.The compromise here is to have a time limit but make it generous enough that the candidate has time to try out a few ideas. The last thing you want to do is cut everyone off mid flow - this would remove the benefit of having a test in the first place.</p> <h3>IDE</h3><p>Believe it or not, some coding challenge systems <b>HackerRank, Codility</b> actually force you to write and compile code in the browser - it seems to have become a bit of a fad recently. It's pretty nifty but it only really works for simple code. It seems to have benefits of scale for the companies using them as the computer tests the inputs and outputs for correctness - but <b>this shows very little respect to the candidate and actually makes their life much harder. It is unable to provide rich intellisense or access to commonly used frameworks or testing tools.</b></p> <p>Developers like their tools and we are no different. Writing code in the browser is not part of our weaponry and will not be something required on the job. Browser based code editors are great for tutorials and quickly trying something out you've just been taught but as a candidate testing tool, this should seriously be reconsidered.</p> <h3>Likeness to the actual job</h3><p>We know that is it impossible to condense the real nature of the job down into a coding challenge. But there really doesn't seem to be any point in asking a developer to complete something like an in-memory algorithm to return them the correct change from a vending machine. Sure, there are some algorithms in there and order of complexity to think about. However, if the job isn't about solving little puzzles, it really doesn't appear relevant.</p> <p>Andy was once sent a zip file from an online fashion retailer and told to refactor it. Whilst this sort of request is a little bit lazy - at least this is probably closer to the real job. Refactoring legacy code is part of almost every job. Furthermore it was actually in their domain. So, big points to them for this challenge, it was enjoyable. The only downside of that is that he never heard anything back (after spending 2 hours on the test too) - this is one of the biggest bugbears we have as developers.</p> <b>The bottom line around getting challenges close to the real world is:</b> <p>Avoid algorithms unless that really is what you are hiring for.</p><p>Avoid tests that were clearly designed for a different industry.</p><p>Be more honest with your coding challenge, if you are hiring a bug fixer, how about a challenge where you need to fix a couple of bugs</p> <i>written by: Andy Davis</i> <p>About Andy Davis</p> <p>Andy is a software developer. He's been writing software for over 20 years and helps businesses solve interesting business problems, by helping them create the right software. He also helps teams with their developer hiring strategy as he believes that hiring the right people has a multiplier effect on awesome software teams.</p>",
                "pubDate": "Thu, 18 Jul 2019 18:24:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-5629452887479620876"
            },
            {
                "title": "Google Is Taking a Big Step to Kill Off Flash for Good",
                "link": "https://web-presence-news.blogspot.com/2015/08/google-is-taking-big-step-to-kill-off.html",
                "description": "<p>STARTING TOMORROW, GOOGLE'S Chrome browser will automatically pause web ads that use Flash.</p> <p>That means that videos and animations in ads using Adobe's Flash technology will no longer autoplay in the world's most-used browser. Ads using HTML5, on the other hand, will continue to work.</p> <p>The decision, first revealed in June on Google+, is the latest nail in Flash's coffin, which is great news for the web: Flash is a bloated, insecure battery hog, and it deserves to die.</p> <p>Fortunately, Google doesn't appear to be the only organization that feels that way. Last month, Mozilla blocked Flash from running on its Firefox browser until Adobe released a new version that fixed some particularly egregious security problems that were revealed in a leak of security company Hacking Team's internal documents. Facebook's chief security officer Alex Stamos also recently called on browser makers to stop supporting Flash altogether. In anticipation of that development, Facebook has slowly been replacing its own videos with HTML5-based alternatives.</p> <p>Advertisers have been the big pro-Flash holdouts, but Amazon has said that it will no longer accept Flash advertisement on its network of sites. Google's move to pause Flash ads is even bigger; it could be just the push the industry needs to finally move on to better technologies.</p>  <p><strong>Posted by: <a href='https://www.wired.com/author/kfinley/' target='_blank'>Klint Finley</a></strong></p>",
                "pubDate": "Mon, 31 Aug 2015 20:52:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-7762364761954454613"
            },
            {
                "title": "Experimental CSS Shaders Bring Photoshop Filters to the Web",
                "link": "https://web-presence-news.blogspot.com/2015/04/experimental-css-shaders-bring.html",
                "description": "<p>Chrome's experimental Canary channel and Safari's WebKit nightly builds both now support all of the Photoshop-inspired blend modes for CSS Shaders, part of <p>Adobe's effort to bring Photoshop-style filter tools to the web.</p>To see the new blend modes in action, grab a copy of the latest Chrome Canary or WebKit nightly builds, enable the CSS Shaders option in about:flags and point your browser to Adobe's sample code over on Codepen. Previously, CSS Shaders required a special build of WebKit [Update: As Adobe's Alan Greenblatt points out in the comments, CSS shader support has been in Chrome stable since v25 (you still need to enable the flag). But if you want to play around with these new blend modes then you'll need Canary (or a WebKit nightly).]</p> <p>The new blend mode support is part of Adobe's CSS Shaders proposal, which recently became part of the W3C's CSS Filter Effects specification. There are two types of shaders in the spec, CSS fragment shaders, which provide features similar to what Photoshop's blending modes offer, and CSS vertex shaders, which handle the 3D animation filters we've showcased in the past.</p> <p>The blending modes currently available include all the familiar options you'll find in Adobe Photoshop, such as multiply, screen, overlay, luminosity and other photographer favorites.</p> <p>For more details and links to the corresponding specs, be sure to check out this post from Max Vujovic, who is working on the CSS Filters implementation in WebKit and Blink.</p> <p>As the CSS Filter Effects specification progresses through the standardization process (and stabilizes), hopefully other browsers will add support as well.</p><strong>Posted By:<a href='https://www.webmonkey.com/author/luxagraf/' target='_blank'> Scott Gilbertson</a></strong>",
                "pubDate": "Thu, 23 Apr 2015 15:37:00 ",
                "guid": "tag:blogger.com,1999:blog-8505796167510599349.post-627902410394140441"
            }
        ],
        examples: [

            {
                "name": "eCommerce Platform",
                "software": "Bootstrap/CSS, JWT-Login, MySQL, Node.js, React.js",
                "thumb": "img/ecommThumb.jpg",
                "youTube": "vNGmP2IxP6A",
                "details": "Sales & Ordering Analytics - Content Management System - JSON web token multi-user login - Sales review options - Inventory module - <a href='#' onClick='populateScreen(&#34uKp8-Y3SFwE&#34)' >View 2020 e-comm legacy version 1.0 here.</a>",
                "gitHub": "https://github.com/aaronrs2002/cart-ecomm-tutorial-9",
                "created": "2023"
            }, {
                "name": "Client Based Management System",
                "software": "Bootstrap/CSS, JWT-Login, MySQL, Node.js, React.js",
                "thumb": "img/clienbasedManagementSystemmThumbV2.jpg",
                "youTube": "vfpiaPv6dy0",
                "details": "Organize guests and employees, generate invoices, build a budget and timeline, organize a workflow and communicate with everyone. <a href='#' onClick='populateScreen(&#34YtIdekGIxrI&#34)' >Watch demo video 2.</a>",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2023"
            },
            {
                "name": "RV Park Administrator",
                "software": "Bootstrap/CSS, JWT-Login, MySQL, Node.js, React.js",
                "thumb": "img/rvParkThumSm.jpg",
                "youTube": "-yKzfCq0aNU",
                "details": "RV Park Administrator is a web app that works on any device.  Save, email, print & evaluate transaction records - Guest timelines - Current, past and waiting guest details - Legal Contracts - Electricity monitoring for each unit - Post any message to your public website",
                "gitHub": "https://github.com/aaronrs2002",
                "created": "2021"
            },

            {
                "name": "Point of Sale - Web App",
                "software": "React.js/Redux,Node.js, MongoDB, Bootstrap/CSS, JWT-Login",
                "thumb": "img/posThumb.jpg",
                "youTube": "XOqfLIvIrWw",
                "details": "Point of Sale Web Application includes Inventory, CMS, Analytics,  Data-Filter and Multi-User-Secure-Login.",
                "gitHub": "https://github.com/aaronrs2002",
                "created": "2020"
            },
            {
                "name": "Decentralized Social Media App",
                "software": "React.js Node.js, MySQL, PHP CSS/Bootstrap",
                "thumb": "img/socialMediaApp.jpg",
                "youTube": "4QP8J0sY3iY",
                "details": "Compile all your favorite RSS feeds into one place. Filter out stories that don't interest you. Share feed networks, recommend your favorite posts and message with friends.",
                "gitHub": "https://github.com/aaronrs2002/social-media-tutorial",
                "created": "2020"
            },
            {
                "name": "City Data Web App",
                "software": "JavaScript/React.js, CSS/Bootstrap, PHP-API",
                "thumb": "img/cityDataAppThumb.jpg",
                "youTube": "LdNmOeIJJNU",
                "details": "Explore hiking trails, points of interest, parks, bus stops and so much more utilizing your town's open source data.",
                "gitHub": "https://github.com/aaronrs2002",
                "created": "2020"
            },
            {
                "name": "Health Tracker",
                "software": "Bootstrap/CSS, JWT-Login, MySQL, Node.js, React.js",
                "thumb": "img/workoutAppThumb.jpg",
                "youTube": "5h0IGywR23s",
                "details": "Log and analyze your nutritional intake vs calories burned while monitoring your progress. Plus, learn from professional trainers.",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2021"
            },
            {
                "name": "Accounting Web App",
                "software": "Bootstrap/CSS, JWT-Login, MySQL, Node.js, React.js",
                "thumb": "img/balanceSheet.jpg",
                "youTube": "tTz-xUFpU54",
                "details": "Import Bank Files, Analyze Income and Expenses, Generate Work Orders, Track Hours on any device.",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2022"
            },
            {
                "name": "Content Management System",
                "software": "Bootstrap/CSS, JWT-Login, MySQL, Node.js, React.js",
                "thumb": "img/cmsThumb2021.jpg",
                "youTube": "b60EjnnN6Tc",
                "details": "Create unlimited pages. Choose from an array of media options. Unlimited banners for each page. Add a blog to any page. Add an event module to any page. Add an image carousel to any page. Choose from numerous themes. Works on any device.",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2021"
            },
            {
                "name": "Recipe Web App",
                "software": "React.js, Node.js, MongoDB, Bootstrap/CSS, Google-Oauth",
                "thumb": "img/recipeThumb.jpg",
                "youTube": "1Lw8QvlMfBY",
                "details": "Add, share and leave comment for your favorite recipes. All you need is a Gmail account.",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2019"
            },

            {
                "name": "Custom Homepage",
                "software": "React.js, Google-Firebase, Bootstrap/CSS, Authentication, PHP-Rest-API",
                "thumb": "img/customHomePageThumb.jpg",
                "youTube": "LSzs0jtbXpI",
                "details": "Custom Homepage Web App  - RSS feed API, YouTube API, weather API, custom themes, secure login, custom links with search filter, google calendar and responsive layout for all devices",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2019"
            },
            {
                "name": "Web Template with CMS",
                "software": "React.js, Google-Firebase, Bootstrap/CSS, Authentication, PHP-Rest-API",
                "thumb": "img/webTemplateThumb.jpg",
                "youTube": "pxmvfImaUH0",
                "details": "Content Management System with multiple layout options plus secure user login. Includes event app, blog, map, video, image carousel, Rich Text Editor, social media and contact components.  <a href='https://web-templates-6a6f1.web.app/?user=7IoD6zEANlVxeNeLw001O22k8JI2&' target='_blank'>Example User 1</a> , <a href='https://web-templates-6a6f1.web.app/?user=YRvF9srJvicNtiIqQ5nCmFD8YHt1&' target='_blank'>Example User 2</a>",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2019"
            },
            {
                "name": "Wedding App",
                "software": "React.js, Bootstrap/CSS, Node.js, JWT, MySQL",
                "thumb": "img/weddingAppThumb.jpg",
                "youTube": "yx-ImV5Nggw",
                "details": "Organize your special day while providing every detail to your friends and family.",
                "gitHub": "https://github.com/aaronrs2002/",
                "created": "2020"
            }
        ],
        blocked: ["harshitb2712@gmail.com", "donfrenette@yahoo.com"],
    }]; 